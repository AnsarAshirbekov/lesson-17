# Напишите программу, в которой есть главный класс с текстовым полем. В главное классе
# должен быть метод для присваивания значения полю: без аргументов и с одним текстовым
# аргументом. Объект главного класса создаётся передачей одного текстового аргумента
# конструктору. На основе главного класса создается класса потомок. В классе-потомке нужно
# добавить числовое поле. У конструктора класса-потомка два аргумента.

# Создаем главный класс, единственным атрибутом которого будет некоторый текст, получаемый от пользователя
class MainClass:
    def __init__(self):
        self.text = '' # Инициализируем атрибут пустой строкой по умолчанию
    # Главный класс будет иметь только два метода: для получения и выдачи текста
    def set_text(self):
        self.text = input('Введите любой текст: ')

    def get_text(self):
        return self.text

# Создаем класс-потомок, который будет наследовать атрибуты и методы от главного класса
class ChildClass(MainClass):
    def __init__(self):
        MainClass.__init__(self) # внутри конструктора класса-потомка обращаемся к конструктору главного класса и 
        # наследуем от него все атрибуты и методы
        self.number = 0 # У класса-потомка будет свой дополнительный атрибут число, по умолчанию 0
    # Также у класса-потомка будут свои дополнительные методы получения и выдачи числа
    def set_number(self):
        self.number = int(input('Введите любое число: '))
    
    def get_number(self):
        return self.number

# Создаем экземпляр класса-потомка
child_object = ChildClass()
# Вызываем 2 метода-сеттера класса-потомка, один из которых он унаследовал от главного класса
child_object.set_text()
# и свой собственный метод
child_object.set_number()
# Точно также вызываем и методы-геттеры
print(child_object.get_text())
print(child_object.get_number())